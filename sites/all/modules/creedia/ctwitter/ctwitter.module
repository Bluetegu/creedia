<?php
// $Id$
/*
 * @file
 * Creedia's Twitter Integration
 *
 * Assumes twitter field is defined per members profile. Presents
 * the members last tweets.
 * Presents the latest Creedia blog tweets.
 *
 * Creedia's Facebook Fun Box on blog (IFrame used as JS doesn't work on IE6&7)
 */

/**
 * Implementation of hook_block
 */
function ctwitter_block($op = 'list', $delta = 0, $edit = array()) {
  global $user;
  $uid = $user->uid;
  // The $op parameter determines what piece of information is being requested.
  switch ($op) {
  case 'list':
    // If $op is "list", we just need to return a list of block descriptions.
    // This is used to provide a list of possible blocks to the administrator,
    // end users will not see these descriptions.
    $blocks[0]['info'] = t('Creedia: Members Tweets');
    $blocks[0]['visibility'] = 1; // show only on listed pages
    $blocks[0]['pages'] = "user/*\n";
    $blocks[0]['cache'] = BLOCK_NO_CACHE;
    $blocks[1]['info'] = t('Creedia: Company Tweets');
    $blocks[1]['visibility'] = 1; // show only on listed pages
    $blocks[1]['pages'] = "blog\n"."node/*\n";
    $blocks[1]['cache'] = BLOCK_NO_CACHE;
    $blocks[2]['info'] = t('Creedia: Company Facebook');
    $blocks[2]['visibility'] = 1; // show only on listed pages
    $blocks[2]['pages'] = "blog\n"."node/*\n";
    $blocks[2]['cache'] = BLOCK_NO_CACHE;
    $blocks[3]['info'] = t('Creedia: Creedia Links');
    $blocks[3]['visibility'] = 0; // show on every page except the listed pages
    $blocks[3]['pages'] = "";
    $blocks[3]['cache'] = BLOCK_CACHE_GLOBAL;

    return $blocks;
  case 'configure':
    // If $op is "configure", we need to provide the administrator with a
    // configuration form. The $delta parameter tells us which block is being
    // configured. In this example, we'll allow the administrator to customize
    // the text of the first block.
    $form = array();
    //       if ($delta == 0) {
    //         // All we need to provide is a text field, Drupal will take care of
    //         // the other block configuration options and the save button.
    //         $form['block_example_string'] = array(
    //           '#type' => 'textfield',
    //           '#title' => t('Block contents'),
    //           '#size' => 60,
    //           '#description' => t('This string will appear in the example block.'),
    //           '#default_value' =>
    //             variable_get('block_example_string',  t('Some example content.')),
    //         );
    //      }
    return $form;
  case 'save':
    // If $op is "save", we need to save settings from the configuration form.
    // Since the first block is the only one that allows configuration, we
    // need to check $delta to make sure we only save it.
    //       if ($delta == 0) {
    //         // Have Drupal save the string to the database.
    //         variable_set('block_example_string', $edit['block_example_string']);
    //       }
    return;
  case 'view': default:
    // If $op is "view", then we need to generate the block for display
    // purposes. The $delta parameter tells us which block is being requested.

    switch ($delta) {
    case 0:
      if ($name = ctwitter_screenname()) {
        ctwitter_add_js($name);
        $block['subject'] = t('My Tweets');
        $block['content'] = theme('ctwitter_updates', $name);
      }
      break;
    case 1:
      if ($name = ctwitter_screenname()) {
        ctwitter_add_js($name);
        $block['subject'] = t('Creedia Tweets');
        $block['content'] = theme('ctwitter_updates', $name);
      }
      break;
    case 2:
      $block['subject'] = t('Creedia Fans');
      $block['content'] = theme('ctwitter_facebook');
      break;
    case 3:
      $block['subject'] = '';
      $block['content'] = theme('ctwitter_links');
      break;
    }
  }
  return $block;
}

function ctwitter_screenname() {
  static $name;
  static $checked;
  if (!$checked) {
    if (arg(0) == 'user' && is_numeric(arg(1))) {
      $node = content_profile_load('member', arg(1));
      if ($node) {
      $name = $node->field_twitter[0]['value'];
      }
    }
    elseif (arg(0) == 'blog') {
      $name = 'creedia';
    }
    elseif (arg(0) == 'node' && is_numeric(arg(1))) {
      $node = menu_get_object();
      if ($node && $node->type == 'blog') {
        $name = 'creedia';
      }
    }
    $checked = TRUE;
  }
  return $name;
}

/**
 * Add js to make sure twitter call doesn't hold off the site.
 */

function ctwitter_add_js($name) {
  static $load = TRUE;
  if ($load) {
    drupal_add_js(drupal_get_path('module', 'ctwitter') .'/ctwitter.js', 'module', 'footer');
    $settings = array('name' => array());
    $settings['name'] = $name;
    drupal_add_js(array('ctwitter' => $settings), 'setting');
    $load = FALSE;
  }
}

/**
 * Implementation of hook_footer().
 */
function ctwitter_footer($main = 0) {
  if ($name = ctwitter_screenname()) {
    $output = '<script type="text/javascript" src="http://twitter.com/javascripts/blogger.js"></script>';
  }
  // ctwitter_add_js($name); moved to hook_init. Can not call drupal_add_js to keep settings
  // from hook_footer. See http://drupal.org/node/212560
  return $output;
}

/**
 * Implementation of hook_theme
 */
function ctwitter_theme() {
  return array(
    'ctwitter_updates' => array(
      'arguments' => array(
        'name' => NULL,
      ),
    ),
    'ctwitter_facebook' => array(
      'arguments' => array(
        '' => NULL,
      ),
    ),
    'ctwitter_links' => array(
      'arguments' => array(
        '' => NULL,
      ),
    ),
    'ctwitter_link' => array(
      'arguments' => array(
        'service' => NULL,
        'url' => NULL,
        'title' => NULL,
      ),
    ),
    'ctwitter_fb_like' => array(
      'arguments' => array(
        'url' => NULL,
        'teaser' => TRUE,
      ),
    ),
    'ctwitter_fb_comments' => array(
      'arguments' => array(
        'node' => NULL,
      ),
    ),
    'ctwitter_fb_like_js' => array(
      'arguments' => array(
        'node' => NULL,
      ),
    ),
    'ctwitter_fb_share' => array(
      'arguments' => array(
        'node' => NULL,
      ),
    ),
  );
}

function theme_ctwitter_updates($name) {
  $output = '<div id="twitter_div">';
  $output .= '<ul id="twitter_update_list"></ul>';
  $path_to_theme = drupal_get_path('theme', variable_get('theme_default', ''));
  $image = theme('image', $path_to_theme .'/images/twitter-followme.gif',
  t('follow me on Twitter.'), t('follow me on Twitter.'));
  $output .= l($image, 'http://twitter.com/'. $name, array('attributes' => array('id' => 'twitter-link'), 'absolute' => TRUE, 'html' => TRUE));
  $output .= '</div>';
  return $output;
}

function theme_ctwitter_facebook() {
  $name = ctwitter_screenname();
  if ($name == 'creedia') {
//     $output = '<fb:fan profile_id="130634997626" stream="0" connections="10" width="188"></fb:fan>';
//     $output .= '<div style="font-size:12px; padding-left:10px"><a href="http://www.facebook.com/pages/Creedia/130634997626">Creedia</a> on Facebook</div>';

    $output = '<iframe scrolling="no" frameborder="0" src="http://www.facebook.com/connect/connect.php?id=130634997626&connections=6&stream=0" allowtransparency="true" style="border: none; width: 188px; height: 260px;"></iframe> ';
//    $output = '<iframe scrolling="no" frameborder="0" src="http://www.facebook.com/connect/connect.php?id=23070720738&connections=6&stream=0" allowtransparency="true" style="border: none; width: 188px; height: 260px;"></iframe> ';
    $output .= '<div style="font-size:12px; padding-left:10px"><a href="http://www.facebook.com/pages/Creedia/130634997626">Creedia</a> on Facebook</div>';

  }
  return $output;
}

function theme_ctwitter_links() {

  $output = '<div class="services">';
  $output .= theme('ctwitter_link', 'newsletter', 'newsletter/subscriptions', 'Creedia newsletter');
  $output .= theme('ctwitter_link', 'twitter', 'http://twitter.com/creedia', 'Creedia on Twitter');
  $output .= theme('ctwitter_link', 'facebook', 'http://www.facebook.com/pages/Creedia/130634997626', 'Creedia on Facebook');
  $output .= theme('ctwitter_link', 'blog', 'blog', 'The Creedia blog');
  $output .= theme('ctwitter_link', 'rss', 'rss.xml', 'Creedia news feed');
  $output .= theme('ctwitter_link', 'help', 'faq', 'Frequently Asked Questions');
  $output .= theme('ctwitter_link', 'info', 'about', 'About Creedia');
  $output .= '</div>';
  return $output;
}

function theme_ctwitter_link($service, $url, $title) {

  $output .= '<div class="service-link">';
  $theme = variable_get('theme_default', '');
  $path = drupal_get_path('theme', $theme) .'/images/'. $service .'-icon.png';
  $image = theme('image', $path);
  $output .= l($image, $url, array('attributes' => array('title' => $title,
                                                         'rel' => 'nofollow',
                                                         'target' => '_blank',
                                                         'class' => 'pngfix'),
                                   'absolute' => TRUE, 'html' => TRUE));
  $output .= '</div>';
  return $output;
}

/*
 * Theme the Facebook like plugin
 */
function theme_ctwitter_fb_like($node, $teaser = FALSE) {

  $url = url('node/'. $node->nid, array('absolute' => TRUE));
  $width = $teaser ? 100 : 450;
  $show_faces = $teaser ? 'false' : 'true';
  $layout = $teaser ? 'button_count' : 'standard';
  $add_style = $teaser ? 'float:left;padding-left:.5em;margin-top:-2px;' : 'margin-top:1em';

  $output = '<iframe src="http://www.facebook.com/plugins/like.php?';
  $output .= 'href='. check_plain($url) .'&amp;';
  $output .= 'layout='. $layout .'&amp;';
  $output .= 'show_faces='. $show_faces .'&amp;';
  $output .= 'width='. $width .'&amp;';
  $output .= 'action=like&amp;locale=en_US&amp;';
  $output .= 'font=arial&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0"';
  $output .= 'style="border:none; overflow:hidden; width:'. $width .'px; height:21px;';
  $output .= ' '. $add_style .'"';
  $output .= 'allowTransparency="true">';
  $output .= '</iframe>';

  return $output;
}

/**
 * Add the FB js init code
 */
function ctwitter_fb_init() {
  static $added = FALSE;

  if (!$added) {
    drupal_add_js(drupal_get_path('module', 'ctwitter') .'/cfb_init.js', 'module', 'header');
    $added = TRUE;
  }
}

/**
 * Add the comment social plugin
 */
function theme_ctwitter_fb_comments($node) {

  ctwitter_fb_init();

  $xid = $node->nid .'-page';
  $url = url('node/'. $node->nid, array('absolute' => TRUE));
  $numposts = 10;
  $width = 657; // px
  $title = $node->title;
  $simple = FALSE;
  $reverse = FALSE; // order of comments
  $publish_feed = TRUE;

  $output = '<fb:comments href="'. $url .'" num_posts="'. $numposts .'" width="'. $width .'"></fb:comments>';
  return $output;
}

/**
 * Add the comment social plugin
 */
function theme_ctwitter_fb_like_js($node, $teaser=FALSE) {

  ctwitter_fb_init();

  if ($teaser) {
    $attrs = array(
      'href' => url('node/'. $node->nid, array('absolute' => TRUE)),
      'layout' => 'button_count', // standard, button_count
      'show_faces' => 'false', // true, false
      'width' => 80, // px
      'action' => 'like', // like, recommend
      'font' => 'arial',
      'colorscheme' => 'light' // dark, light, evil
    );
  }
  else {
    $attrs = array(
      'href' => url('node/'. $node->nid, array('absolute' => TRUE)),
      'layout' => 'standard', // standard, button_count
      'show_faces' => 'true', // true, false
      'width' => 350, // px
      'action' => 'like', // like, recommend
      'font' => 'arial',
      'colorscheme' => 'light' // dark, light, evil
    );
  }

  $attrs = drupal_attributes($attrs);

  return '<fb:like ' . $attrs . '/>';

}

/**
 * Add a facebook share
 */
function theme_ctwitter_fb_share($node) {

  ctwitter_fb_init();

  $attrs = array(
      'href' => url('node/'. $node->nid, array('absolute' => TRUE)),
      'type' => 'button_count',
      'class' => 'url'
  );
  $attrs = drupal_attributes($attrs);

  return '<fb:share-button '. $attrs .'></fb:share-button>';
}
