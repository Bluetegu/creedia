<?php
// $Id$
/*
 * @file
 * Creedia's Newsletter Digest
 *
 * - Add digest of latest entry to the body of the newsletter and allow editing the list per request
 * - Add 'add digest' button to the newsletter edit form
 * - When called, embed 20 last entries to the body of the newsletter
 */

/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function cdigest_form_simplenews_node_form_alter(&$form, &$form_state) {
    // dpm($form);
    // add digest button. 
    $form['digest'] = array(
    	'#type' => 'button', 
    	'#value' => t('Add Digest'), 
    	'#weight' => 0,
        '#executes_submit_callback' => TRUE,
        '#submit'=> array('cdigest_digest'),
    );
    
    // change the filter to 'Full HTML' - *** TODO 
    // dpm($form['body_field']['format']);
}

/**
 * Add the digest
 */
function cdigest_digest($form, &$form_state) {
  // types includes all types to be included in the digest ordered by their appearance
  // i.e. creed will apear first
  $types = array('creed', 'member', 'dblog', 'opinion', 'interpretation');
  $type_placeholders = implode(',', array_fill(0, count($types), "'%s'"));
  $num = 20;
  $bytype = array_fill_keys($types, array());

  // Get the latest relevant nodes
  $sql = "SELECT DISTINCT n.nid, n.type from {node} n WHERE n.type IN ($type_placeholders) AND n.status = 1 ORDER BY n.created DESC";
  $result = db_query_range($sql, $types, 0, $num);
  while ($data = db_fetch_object($result)) {
    $bytype[$data->type][] = node_load($data->nid);
  }

  // taken from preview form handling  
  node_form_submit_build_node($form, &$form_state);
  $form_state['node']['body'] .= theme('cdigest_digest', $bytype);
  // dpm($form_state['node']);
  
}

/**
 * Implementation of hook_theme
 */
function cdigest_theme() {
  return array(
      'cdigest_digest' => array(
      'file' => 'cdigest.module',
       'arguments' => array(
       'bytype' => NULL,
  ),
  ),
  );
}

/**
 * Theme the digest
 */
function theme_cdigest_digest($bytype) {

  $output = '';
  $title_style = 'font-size:12px;line-height:24px;font-weight:bold;text-decoration:underline;color:#396184';

  foreach ($bytype as $type => $nodes) {
    if (count($nodes)) {
      switch ($type) {
        case 'dblog':
          $title = l('Latest Blog Entries', 'blogs', array('attributes' => array('style' => $title_style), 'absolute' => TRUE));
          break;
        case 'creed':
          $title = l('Latest Creed Statements', 'creeds', array('attributes' => array('style' => $title_style), 'absolute' => TRUE));
          break;
        case 'member':
          $title = l('Latest Members', 'members', array('attributes' => array('style' => $title_style), 'absolute' => TRUE));
          break;
        default:
          $title = l('Latest Discussions', 'opinions', array('attributes' => array('style' => $title_style), 'absolute' => TRUE));
          break;
      }

      $outupt .= '<table>';
      $output .= '<div style="width:100%;clear:both;">';

      $output .= '<div style="width:100%;">'. $title .'</div>';

      foreach ($nodes as $node) {
        $node_title_style = 'font-size:16px;font-weight:bold;line-height:20px;text-decoration:none;color:#396184';
        $node_title = l($node->title, 'node/' . $node->nid, array('attributes' => array('style' => $node_title_style), 'absolute' => TRUE));
        $author = '<div class="date-author" style="font-size:12px;line-height:16px;">'. t('!date by !author ', array('!date' => date("d M Y", $node->changed), '!author' => $node->name)) .'</div>';
        $more = l(t('read more'), 'node/' . $node->nid, array('absolute' => TRUE));

        switch ($type) {
          case 'dblog':
            $body = $node->teaser;
            $account = user_load(array('uid' => $node->uid));
            $image = theme('user_picture', $account, 'comment');
            break;
          case 'creed':
            //    if (isset($node->field_origin_statement[0])) {
            //        $body = check_plain($node->field_origin_statement[0]['value']);
            //    }
            $image = theme('image', CREEDIA_CREEDIMAGE_DIRECTORY .'/'. $node->nid .'-00.png');
            $more = '';
            break;
          case 'member':
            $node_title = l($node->field_full_name[0]['value'], 'node/' . $node->nid, array('attributes' => array('style' => $node_title_style), 'absolute' => TRUE));

            $author = '<div class="date-author" style="font-size:12px;line-height:16px;">'. t('joined !date ', array('!date' => date("d M Y", $node->changed))) .'</div>';

            if (isset($node->field_one_liner[0])) {
              $body = '<span style="font-weight:bold;font-size:12px;">'. check_plain($node->field_one_liner[0]['value']) .'</span>';
            }
            else {
              $body = $node->teaser;
            }
            $account = user_load(array('uid' => $node->uid));
            $image = theme('user_picture', $account, 'comment');
            $more = '';
            break;
          default:
            $body = $node->teaser;
            $account = user_load(array('uid' => $node->uid));
            $image = theme('user_picture', $account, 'comment');
            break;
        }

        $output .= '<tr><td>';
        $output .= '<div style="padding:10px 0;width:100%;overflow:visible;clear:both">';
        $output .= '<div class="image" style="float:left; padding:0 8px 2px 0;">'. $image .'</div>';
        $output .= $node_title;
        $output .= $author;
        $output .= $body;
        $output .= $more;
        //  $output .= '<div>'. l('More', 'node/' . $node->nid, array('absolute' => TRUE)) .'</div>';
        //  $output .= '<div style="padding-left:400px;" >'. l('More', 'node/' . $node->nid, array('absolute' => TRUE)) .'</div>';
        $output .= '</div>';
        $output .= '</td></tr>';
      }
      $output .= '</div>';
      $output .= '</table>';
    }
  }
  return $output;
}
